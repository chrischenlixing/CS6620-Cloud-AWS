{
 "Resources": {
  "S3EventQueue221E8167": {
   "Type": "AWS::SQS::Queue",
   "Properties": {
    "VisibilityTimeout": 300
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/S3EventQueue/Resource"
   }
  },
  "S3EventQueuePolicyE50C5A68": {
   "Type": "AWS::SQS::QueuePolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "sqs:SendMessage",
       "Condition": {
        "ArnEquals": {
         "aws:SourceArn": {
          "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputRefS3EventTopic5FF7B50FF38CD345"
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "sns.amazonaws.com"
       },
       "Resource": {
        "Fn::GetAtt": [
         "S3EventQueue221E8167",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Queues": [
     {
      "Ref": "S3EventQueue221E8167"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/S3EventQueue/Policy/Resource"
   }
  },
  "S3EventQueueStorageAndNotificationStackS3EventTopic398AC2B5F873C2CC": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "S3EventQueue221E8167",
      "Arn"
     ]
    },
    "Protocol": "sqs",
    "TopicArn": {
     "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputRefS3EventTopic5FF7B50FF38CD345"
    }
   },
   "DependsOn": [
    "S3EventQueuePolicyE50C5A68"
   ],
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/S3EventQueue/StorageAndNotificationStackS3EventTopic398AC2B5/Resource"
   }
  },
  "LoggingLambdaServiceRole331DF750": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/LoggingLambda/ServiceRole/Resource"
   }
  },
  "LoggingLambdaServiceRoleDefaultPolicy913A0F90": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputFnGetAttAssignment4BucketE8160C3DArn24175C33"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputFnGetAttAssignment4BucketE8160C3DArn24175C33"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "sqs:ChangeMessageVisibility",
        "sqs:DeleteMessage",
        "sqs:GetQueueAttributes",
        "sqs:GetQueueUrl",
        "sqs:ReceiveMessage"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "S3EventQueue221E8167",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "LoggingLambdaServiceRoleDefaultPolicy913A0F90",
    "Roles": [
     {
      "Ref": "LoggingLambdaServiceRole331DF750"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/LoggingLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "LoggingLambda9F8E42F8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f59b43dd9f5113249c7cb7dd89c578d70b0cac4d66f72c58e2167fab175610a8.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputRefAssignment4BucketE8160C3D525617DD"
      }
     }
    },
    "Handler": "logging.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "LoggingLambdaServiceRole331DF750",
      "Arn"
     ]
    },
    "Runtime": "python3.8",
    "Timeout": 60
   },
   "DependsOn": [
    "LoggingLambdaServiceRoleDefaultPolicy913A0F90",
    "LoggingLambdaServiceRole331DF750"
   ],
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/LoggingLambda/Resource",
    "aws:asset:path": "asset.f59b43dd9f5113249c7cb7dd89c578d70b0cac4d66f72c58e2167fab175610a8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "LoggingLambdaSqsEventSourceLoggingLambdaStackS3EventQueueF7C3B90FDBE8CB06": {
   "Type": "AWS::Lambda::EventSourceMapping",
   "Properties": {
    "EventSourceArn": {
     "Fn::GetAtt": [
      "S3EventQueue221E8167",
      "Arn"
     ]
    },
    "FunctionName": {
     "Ref": "LoggingLambda9F8E42F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/LoggingLambda/SqsEventSource:LoggingLambdaStackS3EventQueueF7C3B90F/Resource"
   }
  },
  "LoggingLambdaLogGroupBD99CF4A": {
   "Type": "AWS::Logs::LogGroup",
   "Properties": {
    "LogGroupName": {
     "Fn::Join": [
      "",
      [
       "/aws/lambda/",
       {
        "Ref": "LoggingLambda9F8E42F8"
       }
      ]
     ]
    },
    "RetentionInDays": 7
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/LoggingLambdaLogGroup/Resource"
   }
  },
  "SizeDeltaMetricFilter6C059685": {
   "Type": "AWS::Logs::MetricFilter",
   "Properties": {
    "FilterPattern": "{ $.size_delta = \"*\" }",
    "LogGroupName": {
     "Ref": "LoggingLambdaLogGroupBD99CF4A"
    },
    "MetricTransformations": [
     {
      "MetricName": "TotalObjectSize",
      "MetricNamespace": "Assignment4App",
      "MetricValue": "$.size_delta"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/SizeDeltaMetricFilter/Resource"
   }
  },
  "CleanerLambdaServiceRole9F5C3FC0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/CleanerLambda/ServiceRole/Resource"
   }
  },
  "CleanerLambdaServiceRoleDefaultPolicy04CE099E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:Abort*",
        "s3:DeleteObject*",
        "s3:GetBucket*",
        "s3:GetObject*",
        "s3:List*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputFnGetAttAssignment4BucketE8160C3DArn24175C33"
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputFnGetAttAssignment4BucketE8160C3DArn24175C33"
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:DeleteObject*",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputFnGetAttAssignment4BucketE8160C3DArn24175C33"
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "CleanerLambdaServiceRoleDefaultPolicy04CE099E",
    "Roles": [
     {
      "Ref": "CleanerLambdaServiceRole9F5C3FC0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/CleanerLambda/ServiceRole/DefaultPolicy/Resource"
   }
  },
  "CleanerLambdaADF65AF3": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "f59b43dd9f5113249c7cb7dd89c578d70b0cac4d66f72c58e2167fab175610a8.zip"
    },
    "Environment": {
     "Variables": {
      "BUCKET_NAME": {
       "Fn::ImportValue": "StorageAndNotificationStack:ExportsOutputRefAssignment4BucketE8160C3D525617DD"
      }
     }
    },
    "Handler": "cleaner.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "CleanerLambdaServiceRole9F5C3FC0",
      "Arn"
     ]
    },
    "Runtime": "python3.8",
    "Timeout": 60
   },
   "DependsOn": [
    "CleanerLambdaServiceRoleDefaultPolicy04CE099E",
    "CleanerLambdaServiceRole9F5C3FC0"
   ],
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/CleanerLambda/Resource",
    "aws:asset:path": "asset.f59b43dd9f5113249c7cb7dd89c578d70b0cac4d66f72c58e2167fab175610a8",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "CleanerLambdaAllowInvokeLoggingLambdaStackAlarmTopic59E1CA03A2168572": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "CleanerLambdaADF65AF3",
      "Arn"
     ]
    },
    "Principal": "sns.amazonaws.com",
    "SourceArn": {
     "Ref": "AlarmTopicD01E77F9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/CleanerLambda/AllowInvoke:LoggingLambdaStackAlarmTopic59E1CA03"
   }
  },
  "CleanerLambdaAlarmTopicECCC6A23": {
   "Type": "AWS::SNS::Subscription",
   "Properties": {
    "Endpoint": {
     "Fn::GetAtt": [
      "CleanerLambdaADF65AF3",
      "Arn"
     ]
    },
    "Protocol": "lambda",
    "TopicArn": {
     "Ref": "AlarmTopicD01E77F9"
    }
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/CleanerLambda/AlarmTopic/Resource"
   }
  },
  "AlarmTopicD01E77F9": {
   "Type": "AWS::SNS::Topic",
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/AlarmTopic/Resource"
   }
  },
  "SizeThresholdAlarmA59B2C9B": {
   "Type": "AWS::CloudWatch::Alarm",
   "Properties": {
    "AlarmActions": [
     {
      "Ref": "AlarmTopicD01E77F9"
     }
    ],
    "ComparisonOperator": "GreaterThanOrEqualToThreshold",
    "EvaluationPeriods": 1,
    "MetricName": "TotalObjectSize",
    "Namespace": "Assignment4App",
    "Period": 10,
    "Statistic": "Sum",
    "Threshold": 15,
    "TreatMissingData": "notBreaching"
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/SizeThresholdAlarm/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21PTU/DMAz9LbunhlExcd0mxoVJpeU+pWnWmaZJiROqKep/R0mhgMQl78uWX+5gvbmH2xUfKRNNlymsIVSOi47xkU6B3gnCi5desv1ZzyS9hVEoros5y4mRJgiVr0lYHBwaHSf+6FczoIhuIhNTvK8bDuHgtfheWPjjh9SuMt4KeeTDgLqN8f9uIW2PRGj0xJD3EEqjUuuEP32XqvmJE0lHsI3AKIedF510O06SKdMShGfTPlnjh7i38KN0FsUBlZM2Br/1xIQyvhm5ExcIW8VtH0cSmSZWSkq1WTpZOd5+lV+C/VnvjW7QpX8UV3cx+iaHB1hvVm+EmFmvHfYSyhk/AROmLPXBAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "LoggingLambdaStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}